<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Web Socket 채팅</title>
</head>
<body>
    <h1>채팅</h1>

    <!-- 채팅 내역 -->
    <ul></ul>

    <!-- 채팅 입력 -->
    <form id="chat">
        이름 <input type="text" id="name" name="name"><br>
        내용 <input type="text" id="message" name="message"><br>
        <button>전송</button>
    </form>


    <script>
        const socket = new WebSocket("ws://localhost:8000");
        console.log(socket);

        const chatForm = document.querySelector("#chat");
        const ul = document.querySelector("ul");

        socket.addEventListener("open", (event) => {
            console.log("[서버 연결 완료]");
        });

        socket.addEventListener("message", (event) => {
            console.log(event);
            const data = JSON.parse(event.data);
            const {msg, name} = data;

            const li = document.createElement("li");
            li.textContent = `${name}님 - ${msg}`;
            ul.append(li);
        });

        socket.addEventListener("close", (event) => {
            console.log("[서버 연결 종료]");
        });

        socket.addEventListener("error", (event) => {
            console.log("에러 발생 : :", event.console.error);
        });

        chatForm.addEventListener("submit", (event) => {
            event.preventDefault();

            // input 태크에 이볅한 정보 바탕으로 메시지 데이터 생성
            const data = {
                msg: chatForm.message.value,
                name: chatForm.name.value,
            };

            console.log("보내려는 메시지 데이터 :: ", data);
            
            // 메시지 데이터를 웹 소켓 서버로 전송 (send 메서드는 문자열과 이진 데이터 프레임만 전송)
            // JSON.stringify 사용하여 문자열로 변환 후 전송
            socket.send(JSON.stringify(data));

            chatForm.reset();
        });
    </script>
    
</body>
</html>